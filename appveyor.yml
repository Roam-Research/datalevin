---

version: "v-{build}"

branches:
  only:
    - coll
    # - master

skip_non_tags: false
# skip_non_tags: true

image: Visual Studio 2019

configuration:
- Release

clone_folder: C:\projects\datalevin

environment:
  GRAALVM_HOME: C:\projects\datalevin\graalvm
  JAVA_HOME: C:\projects\datalevin\graalvm
  PATH: C:\projects\datalevin\graalvm\bin;%PATH%

clone_script:
- ps: >-
    if(-not $env:APPVEYOR_PULL_REQUEST_NUMBER) {
      git clone -q --branch=$env:APPVEYOR_REPO_BRANCH https://github.com/$env:APPVEYOR_REPO_NAME.git $env:APPVEYOR_BUILD_FOLDER
      cd $env:APPVEYOR_BUILD_FOLDER
      git checkout -qf $env:APPVEYOR_REPO_COMMIT
    } else {
      git clone -q https://github.com/$env:APPVEYOR_REPO_NAME.git $env:APPVEYOR_BUILD_FOLDER
      cd $env:APPVEYOR_BUILD_FOLDER
      git fetch -q origin +refs/pull/$env:APPVEYOR_PULL_REQUEST_NUMBER/merge:
      git checkout -qf FETCH_HEAD
    }

build_script:
- cmd: >-
    call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"

    powershell -Command "if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://download.oracle.com/graalvm/23/latest/graalvm-jdk-23_windows-x64_bin.zip', 'graalvm.zip') }"

    powershell -Command "if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }"

- cmd: >-
    powershell -Command "(New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein.bat', 'lein.bat')"

    call lein.bat self-install

    call script\compile-native.bat

    7z a dtlv-%APPVEYOR_REPO_TAG_NAME%-windows-amd64.zip dtlv.exe

artifacts:
  - path: dtlv-$(APPVEYOR_REPO_TAG_NAME)-windows-amd64.zip

# deploy:
#   provider: GitHub
#   auth_token:
#     secure: QIiuupmpAl2Y5kxVyFJTSDRIj/uKyXXE3PzARE//JY44zXEJ7vbqvhcftKq/dFdf
#   artifact: /.*\.zip/
#   force_update: true
#   on:
#     APPVEYOR_REPO_TAG: true
